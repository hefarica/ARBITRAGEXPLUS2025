{
  "timestamp": "2025-10-18T13:55:48.392Z",
  "validation_status": "PASS",
  "results": {
    "Archivos Raíz": {
      "found": [
        "package.json",
        "pnpm-workspace.yaml",
        "fly.toml",
        "README.md",
        ".gitignore",
        ".editorconfig",
        ".env.example",
        "CHECKLIST_MANU_MASTER.md",
        "CHANGELOG.md"
      ],
      "missing": [],
      "details": [
        {
          "path": "package.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "pnpm-workspace.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "fly.toml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "README.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".gitignore",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".editorconfig",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".env.example",
          "status": "found",
          "type": "file"
        },
        {
          "path": "CHECKLIST_MANU_MASTER.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": "CHANGELOG.md",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Directorios Principales": {
      "found": [
        ".github",
        ".github/workflows",
        ".github/ISSUE_TEMPLATE",
        ".github/PULL_REQUEST_TEMPLATE",
        "SCRIPTS",
        "configs",
        "services",
        "services/api-server",
        "services/python-collector",
        "services/engine-rust",
        "services/ts-executor",
        "contracts",
        "docs",
        "db",
        "db/migrations",
        "db/seeds",
        "tools"
      ],
      "missing": [],
      "details": [
        {
          "path": ".github",
          "status": "found",
          "type": "directory"
        },
        {
          "path": ".github/workflows",
          "status": "found",
          "type": "directory"
        },
        {
          "path": ".github/ISSUE_TEMPLATE",
          "status": "found",
          "type": "directory"
        },
        {
          "path": ".github/PULL_REQUEST_TEMPLATE",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "SCRIPTS",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "configs",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "services",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "services/api-server",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "services/python-collector",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "services/engine-rust",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "services/ts-executor",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "contracts",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "docs",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "db",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "db/migrations",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "db/seeds",
          "status": "found",
          "type": "directory"
        },
        {
          "path": "tools",
          "status": "found",
          "type": "directory"
        }
      ]
    },
    "Configuraciones": {
      "found": [
        "configs/chains.yaml",
        "configs/dex.yaml",
        "configs/tokens.yaml",
        "configs/pools.yaml",
        "configs/strategies.yaml",
        "configs/monitoring.yaml"
      ],
      "missing": [],
      "details": [
        {
          "path": "configs/chains.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "configs/dex.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "configs/tokens.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "configs/pools.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "configs/strategies.yaml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "configs/monitoring.yaml",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Scripts de Validación": {
      "found": [
        "SCRIPTS/package.json",
        "SCRIPTS/verify-structure.js",
        "SCRIPTS/scan-dead-paths.js",
        "SCRIPTS/check-fly-config.js",
        "SCRIPTS/validate-deployment.js",
        "SCRIPTS/validate-local-health.js"
      ],
      "missing": [],
      "details": [
        {
          "path": "SCRIPTS/package.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "SCRIPTS/verify-structure.js",
          "status": "found",
          "type": "file"
        },
        {
          "path": "SCRIPTS/scan-dead-paths.js",
          "status": "found",
          "type": "file"
        },
        {
          "path": "SCRIPTS/check-fly-config.js",
          "status": "found",
          "type": "file"
        },
        {
          "path": "SCRIPTS/validate-deployment.js",
          "status": "found",
          "type": "file"
        },
        {
          "path": "SCRIPTS/validate-local-health.js",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "API Server": {
      "found": [
        "services/api-server/package.json",
        "services/api-server/tsconfig.json",
        "services/api-server/Dockerfile",
        "services/api-server/src/server.ts",
        "services/api-server/src/routes/index.ts",
        "services/api-server/src/adapters/ws/websocketManager.ts",
        "services/api-server/src/adapters/ws/uniswap.ts",
        "services/api-server/src/adapters/ws/sushiswap.ts",
        "services/api-server/src/adapters/ws/pancakeswap.ts",
        "services/api-server/src/oracles/pyth.ts",
        "services/api-server/src/oracles/chainlink.ts",
        "services/api-server/src/services/sheetsService.ts",
        "services/api-server/src/services/arbitrageService.ts",
        "services/api-server/src/exec/flash.ts",
        "services/api-server/src/controllers/arbitrage.ts",
        "services/api-server/src/controllers/health.ts"
      ],
      "missing": [],
      "details": [
        {
          "path": "services/api-server/package.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/tsconfig.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/Dockerfile",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/server.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/routes/index.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/adapters/ws/websocketManager.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/adapters/ws/uniswap.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/adapters/ws/sushiswap.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/adapters/ws/pancakeswap.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/oracles/pyth.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/oracles/chainlink.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/services/sheetsService.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/services/arbitrageService.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/exec/flash.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/controllers/arbitrage.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/api-server/src/controllers/health.ts",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Python Collector": {
      "found": [
        "services/python-collector/requirements.txt",
        "services/python-collector/setup.py",
        "services/python-collector/src/main.py",
        "services/python-collector/src/sheets/client.py",
        "services/python-collector/src/sheets/config_reader.py",
        "services/python-collector/src/sheets/route_writer.py",
        "services/python-collector/src/collectors/dex_prices.py",
        "services/python-collector/src/collectors/blockchain_health.py",
        "services/python-collector/src/connectors/pyth.py",
        "services/python-collector/src/connectors/defillama.py",
        "services/python-collector/src/connectors/publicnodes.py"
      ],
      "missing": [],
      "details": [
        {
          "path": "services/python-collector/requirements.txt",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/setup.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/main.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/sheets/client.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/sheets/config_reader.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/sheets/route_writer.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/collectors/dex_prices.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/collectors/blockchain_health.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/connectors/pyth.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/connectors/defillama.py",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/python-collector/src/connectors/publicnodes.py",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Rust Engine": {
      "found": [
        "services/engine-rust/Cargo.toml",
        "services/engine-rust/src/main.rs",
        "services/engine-rust/src/lib.rs",
        "services/engine-rust/src/pathfinding/mod.rs",
        "services/engine-rust/src/pathfinding/two_dex.rs",
        "services/engine-rust/src/pathfinding/three_dex.rs",
        "services/engine-rust/src/pathfinding/ranking.rs",
        "services/engine-rust/src/pricing/mod.rs",
        "services/engine-rust/src/pricing/dex_pricing.rs",
        "services/engine-rust/src/engine/mod.rs",
        "services/engine-rust/src/engine/arbitrage.rs",
        "services/engine-rust/src/engine/optimizer.rs",
        "services/engine-rust/src/connectors/sheets.rs",
        "services/engine-rust/src/connectors/blockchain.rs"
      ],
      "missing": [],
      "details": [
        {
          "path": "services/engine-rust/Cargo.toml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/main.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/lib.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pathfinding/mod.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pathfinding/two_dex.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pathfinding/three_dex.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pathfinding/ranking.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pricing/mod.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/pricing/dex_pricing.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/engine/mod.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/engine/arbitrage.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/engine/optimizer.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/connectors/sheets.rs",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/engine-rust/src/connectors/blockchain.rs",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "TS Executor": {
      "found": [
        "services/ts-executor/package.json",
        "services/ts-executor/tsconfig.json",
        "services/ts-executor/src/index.ts",
        "services/ts-executor/src/exec/flash.ts",
        "services/ts-executor/src/queues/queueManager.ts",
        "services/ts-executor/src/chains/manager.ts",
        "services/ts-executor/src/jobs/arbitrage_job.ts"
      ],
      "missing": [],
      "details": [
        {
          "path": "services/ts-executor/package.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/tsconfig.json",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/src/index.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/src/exec/flash.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/src/queues/queueManager.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/src/chains/manager.ts",
          "status": "found",
          "type": "file"
        },
        {
          "path": "services/ts-executor/src/jobs/arbitrage_job.ts",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Contratos Solidity": {
      "found": [
        "contracts/foundry.toml",
        "contracts/src/ArbitrageExecutor.sol",
        "contracts/src/Router.sol",
        "contracts/src/Vault.sol",
        "contracts/interfaces/IERC20.sol",
        "contracts/interfaces/IFlashLoanReceiver.sol",
        "contracts/test/ArbitrageExecutor.t.sol",
        "contracts/script/DeployArbitrage.s.sol"
      ],
      "missing": [],
      "details": [
        {
          "path": "contracts/foundry.toml",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/src/ArbitrageExecutor.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/src/Router.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/src/Vault.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/interfaces/IERC20.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/interfaces/IFlashLoanReceiver.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/test/ArbitrageExecutor.t.sol",
          "status": "found",
          "type": "file"
        },
        {
          "path": "contracts/script/DeployArbitrage.s.sol",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "Documentación": {
      "found": [
        "docs/ARCHITECTURE.md",
        "docs/DATAFLOW.md",
        "docs/PLAN_DE_ACCION_ES.md",
        "docs/REQUISITOS_TECNICOS_P0_ES.md",
        "docs/API.md"
      ],
      "missing": [],
      "details": [
        {
          "path": "docs/ARCHITECTURE.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": "docs/DATAFLOW.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": "docs/PLAN_DE_ACCION_ES.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": "docs/REQUISITOS_TECNICOS_P0_ES.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": "docs/API.md",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "GitHub Workflows": {
      "found": [
        ".github/workflows/ci.yml",
        ".github/workflows/deploy.yml",
        ".github/workflows/validate.yml"
      ],
      "missing": [],
      "details": [
        {
          "path": ".github/workflows/ci.yml",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/workflows/deploy.yml",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/workflows/validate.yml",
          "status": "found",
          "type": "file"
        }
      ]
    },
    "GitHub Templates": {
      "found": [
        ".github/ISSUE_TEMPLATE/bug-report.md",
        ".github/ISSUE_TEMPLATE/feature-request.md",
        ".github/ISSUE_TEMPLATE/operational.md",
        ".github/PULL_REQUEST_TEMPLATE/default.md",
        ".github/PULL_REQUEST_TEMPLATE/manu-fly-deployment.md"
      ],
      "missing": [],
      "details": [
        {
          "path": ".github/ISSUE_TEMPLATE/bug-report.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/ISSUE_TEMPLATE/feature-request.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/ISSUE_TEMPLATE/operational.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/PULL_REQUEST_TEMPLATE/default.md",
          "status": "found",
          "type": "file"
        },
        {
          "path": ".github/PULL_REQUEST_TEMPLATE/manu-fly-deployment.md",
          "status": "found",
          "type": "file"
        }
      ]
    }
  },
  "executed_by": "ubuntu",
  "project_root": "/home/ubuntu/ARBITRAGEXPLUS2025"
}